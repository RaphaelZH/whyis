openapi: 3.0.2
info: 
  title: Whyis
  description: [to be added]
  version: 0.1.0
paths:

  ###### Homepage views ######

  /?view=labels:
    get:
      description: Returns a label for each specified URI. The label returned will be taken from, in order of priority: skos:prefLabel, rdfs:label, schema:name, dc:title, foaf:name, or schema:name. If no label is found, the URI itself will be used as the label.
      parameters:
      - name: uris
        in: query
        description: A comma-delimited list of URIs.
        required: true
      responses:
        '200':
         content:
            application/json:
              schema:
                type: object
                description: An object whose keys are the URIs passed in as a parameter, and whose corresponding values are the labels for those URIs.

  /?view=latest:
    get:
      description: Lists up to 20 of the most recently-changed entities, sorted from newest to oldest.
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Contains the URI of a recently-changed entity along with its timestamp. 
                  properties:
                    about:
                      type: string
                      format: url
                    updated:
                      description: Timestamp, in ISO 8601 format, with six-digit precision on fractional seconds
                      type: string
                      format: timestamp

  /?view=resolve:
    get:
      description: Allows searching for resources by a number of properties representing plaintext identifiers. This includes dc:title, rdfs:label, skos:prefLabel, skos:altLabel, foaf:name, and dc:identifier. Resources of type sio:Term are excluded.
      parameters:
      - name: term
        in: query
        description: The string to search for
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: A url corresponding to an rdf:type. If present, only resources of the specified type will be returned.
        required: false
        schema:
          type: string
          format: url
      - name: context
        in: query
        description: Additional plaintext to search for in the other attributes of the desired resource.
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Describes an RDF resource that is somehow labeled with the desired term.
                  properties:
                    node:
                      type: string
                      format: url
                      description: The URI of the resource that was found
                    title:
                      type: string
                      description: The dc:title of the resource, if present
                    label:
                      type: string
                      description: The rdfs:label of the resource, if present
                    prefLabel:
                      type: string
                      description: The skos:prefLabel of the resource, if present
                    altLabel:
                      type: string
                      description: The skos:altLabel of the resource, if present
                    name:
                      type: string
                      description: The foaf:name of the resource, if present
                    identifier:
                      type: string
                      description: The dc:identifier of the resource, if present
                    score:
                      type: float
                      description: A representation of how closely this node matched the search term

  ###### Resource views ######

  /?view=summary:
    get:
      description: Returns a list of summary properties for the given resource URI. By default, summary properties are taken from skos:definition, schema:description, dc:abstract, dc:description, dc:summary. rdfs:comment, dcelements:description, obo:UAO_0000115, prov:value, and sio:hasValue. Additional summary properties may be specified by the application configuration.
      parameters:
      - name: uri
        in: query
        description: URI to be summarized
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          description: A list of tuples (p,o) where p is taken from the list of summary properties and o is the corresponding value
          content:
            application/json: 
              schema:
                type: array
                items:
                  type: array
                  description: The zeroth element of this sub-array is the URI of one of the summary properties and the first element is the string literal that is the value of that property for the resource in question.
                
          
  /?view=attributes:
    get:
      description: Returns all properties of `uri` whose values are literals, as well as all sio attributes `uri` has. If units are specified for any attributes, the units are also returned. The following properties are excluded: `foaf:depiction`, `sioc:content`, `skos:definition`, `dc:abstract`, `dc:description`, `dc:summary`, `rdfs:comment`, `dcelements:description`, `<http://purl.obolibrary.org/obo/IAO_0000115>`, `prov:value`, `sio:hasValue`, and `<http://dbpedia.org/ontology/abstract>`. # ... And then it pipes them through this "attributes" filter that I haven't looked at yet? It does some sort of jsonld thing. something gets sorted by length?
      parameters:
      - name: uri
        in: query
        description: URI to display attributes for
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  @id:
                    type: string
                    format: uri
                    description: The URI of this resource.
                  attributes:
                    description: #TODO
                    type: array
                    items:
                      type: object
                      properties:
                        @id:
                          type: string
                          format: uri
                          description: The URI of this attribute
                        label:
                          type: string
                          description: The label of this attribute
                        values:
                          type: array
                          items:
                            #TODO
                  description:
                    description: A list of summary properties for the specified URI (see /?view=summary).
                    type: array
                    items:
                      type: object
                      properties:
                        @id:
                          type: string
                          format: url
                          description: The URI of the summary predicate
                        label:
                          type: string
                          description: A human-readable label for the summary predicate
                        value:
                          type: string
                          description: The plaintext string that is the value of the summary property
                  label:
                    type: string
                    description: The label of this resource, taken from the list of label properties. # TODO Explain the list of label properties somewhere                        
                  type:
                    description: A list of every rdf:type this resource is a member of.
                    type: array
                    items:
                      type: object
                      description: Represents one rdf:type this resource is a member of
                      properties:
                        @id: 
                          type: string
                          format: url
                          description: The URI the rdf:type
                        label:
                          type: string
                          description: The label of the rdf:type, taken from the list of label properties
                        
  /?view=nanopublications:
    get:
      description: Lists nanopublications that are about (as sio:isAbout) the specified URI, or that have the specified URI as the subject of their assertion.
      parameters:
      - name: uri
        in: query
        description: URI to display nanopublications for
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          application/json:
            schema:
              type: array
              items:
                type: object
                description: Information about one nanopublication
                properties:
                  np:
                    type: string
                    format: uri
                    description: The URI of this nanopublication
                  created:
                    type: string
                    format: timestamp
                    description: The date and time when this nanopublication was originally created
                  updated:
                    type: string
                    format: timestamp
                    description: The date and time when this nanopublication was most recently modified, or the creation date if it has not been modified
                  quoted:
                    type: string
                    format: uri
                    description: The URI of another nanopublication that this nanopublication's assertion was quoted from
                  about:
                    type: string
                    format: uri
                    description: The URI of the topic of this nanopublication, as defined by sio:isAbout
                  contributor:
                    type: string
                    format: uri
                    description: The URI of a dc:contributor of this nanopublication.
                  derived_from:
                    type: string
                    format: uri
                    description: The URI of a resource this nanopublication was derived from (as prov:wasDerivedFrom).
                  generation_type:
                    type: string
                    format: uri
                    description: The type of the activity that generated this nanopublication, as defined by prov:wasGeneratedBy.
                  content:
                    type: string
                    description: The sioc:content of this nanopublication.
                  reply_of:
                    type: string
                    format: uri
                    description: The URI of a resource this nanopulbication is a reply to (as sioc:reply_of).
                  

  /?view=related&uri={uri}:
    get:
      description:
      parameters:
      - name: uri
        in: query
        description:
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          content:
            application/json:
              schema: #TODO

  #outgoing
  #incoming # most of the relevant code is in filters.py : mergeLink() # that's a _Lot_ of sparql # why are there no comments in filters.py
    schema:
      type: array
      items:
        type: object
        properties:
          articles:
            type: list
          from:
            type: list
            items:
              type: string
              format: url
          label:
            type: string
          link:
            type: string
            format: url
          link_types:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                uri:
                  type: string
                  format: url
          probability:
            type: number
          source:
            type: string
            format: url
          source_label:
            type: string
          source_types:
            type: array
            items:
              type: array
              items:
                type: string
                format: url
          target:
            type: string
            format: url
 
  /?view=describe:
    get:
      description: Returns every triple contained in a nanopublication assertion whose subject is the specified URI, and provides the rdfs:label. skos:prefLabel, dc:title, and foaf:name for the object of each of these triples. Additionally, for each of these triples where the predicate is sio:hasAttribute or sio:hasPart, all triples whose subject is the object of this triple, and the rdfs:label of their objects, will be returned as well.
      parameters:
      - name: uri
        in: query
        description:
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Represents all triples in the output with the same subject. One JSON object is returned for each subject; this has an "@id" field containing the URI of the subject, and a field for the URI of each predicate for which triples with this subject are being returned, which contains an array whose elements are single-field objects. If that predicate takes literal objects, the single field in the objects is "@value" and its value is the corresponding literal; if the predicate takes objects that are non-literals, the single field is "@id" and its value is the URI of the object.
                  properties:
                    @id:
                      type: string
                      format: url
                      description: The URI of the subject of the triples this JSON object represents.
                    @type:
                      type: array
                      items:
                        type: string
                        format: url
                        description: The URI of an rdf:type of the subject. Only present in the object representing the URI being queried.

  ###### Class views ######
  
  /?view=constraints:
    get:
      description:
      parameters:
      - name: uri
        in: query
        description:
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class:
                      type: string
                      format: url
                    property:
                      type: string
                      format: url
                    propertyLabel:
                      type: string
                    propertyType:
                      type: string
                      format: url
                    range:
                      type: string
                      format: url
                    rangeLabel:
                      type: string
                    superClass:
                      type: string
                      format: url
  
  /?view=facets:
    get:
      description:
      parameters:
      - name: uri
        in: query
        description:
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class:
                      type: string
                    label:
                      type: string
                    facetId:
                      type: string
                    predicate:
                      type: string
                    typeProperty:
                      type: string
                    specifier:
                      type: string
                    propertyType:
                      type: string
                    
  
  #facet_values
  
  /?view=instance_data:
    get:
      description:
      parameters:
      - name: uri
        in: query
        description:
        required: true
        schema:
          type: string
          format: uri
      - name: variables
        in: query
        description:
        required: false      
      - name: constraints
        in: query
        description:
        required: false
      responses:
        '200':
          content:
            application/json:

  #outgoing
  #incoming
  
  ###### Ontology views ######
  #outgoing
  #incoming
  #describe

  ###### Nanopublication views ######
  #describe
