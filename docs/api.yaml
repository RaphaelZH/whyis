openapi: 3.0.2
info: 
  title: Whyis
  description: [to be added]
  version: 0.1.0
  # TOS, contact, license all optional
paths:

  ###### Homepage views ######

  /?view=labels:
    get:
      description: Returns a label for each specified URI. The label returned will be taken from, in order of priority: skos:prefLabel, rdfs:label, schema:name, dc:title, foaf:name, or schema:name. If no label is found, the URI itself will be used as the label.
      parameters:
      - name: uris
        in: query
        description: A comma-delimited list of URIs.
        required: true
      responses:
        '200':
         content:
            application/json:
              schema:
                type: object
                description: An object whose keys are the URIs passed in as a parameter, and whose corresponding values are the labels for those URIs.

  /?view=latest:
    get:
      description: Lists up to 20 of the most recently-changed entities, sorted from newest to oldest. # TODO How recently-changed?
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Contains the URI of a recently-changed entity along with its timestamp. 
                  properties:
                    about:
                      type: string
                      format: url
                    updated:
                      description: Timestamp, in ISO 8601 format, with six-digit precision on fractional seconds
                      type: string
                      format: timestamp

  /?view=resolve:
    get:
      description: Allows searching for entities by a number of properties representing plaintext identifiers. This includes dc:title, rdfs:label, skos:prefLabel, skos:altLabel, foaf:name, and dc:identifier. Entities of type sio:Term are excluded.
      parameters:
      - name: term
        in: query
        description: The string to search for
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: A url corresponding to an rdf:type. If present, only entities of the specified type will be returned.
        required: false
        schema:
          type: string
          format: url
      - name: context
        in: query
        description: The string to search for
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Describes an RDF resource that is somehow labeled with the desired term.
                  properties:
                    node:
                      type: string
                      format: url
                      description: The URI of the resource that was found
                    title:
                      type: string
                      description: The dc:title of the resource
                    label:
                      type: string
                      description: The rdfs:label of the resource
                    prefLabel:
                      type: string
                      description: The skos:prefLabel of the resource
                    altLabel:
                      type: string
                      description: The skos:altLabel of the resource
                    name:
                      type: string
                      description: The foaf:name of the resource
                    identifier:
                      type: string
                      description: The dc:identifier of the resource
                    score:
                      type: float
                      description: A representation of how closely this node matched the search term

  ###### Resource views ######

  /?view=summary&uri={uri}:
    get:
      description: Returns a list of summary properties for the given resource URI. By default, summary properties are taken from skos:definition, schema:description, dc:abstract, dc:description, dc:summary. rdfs:comment, dcelements:description, obo:UAO_0000115, prov:value, and sio:hasValue. Additional summary properties may be specified by the application configuration.
      parameters:
      - name: uri
        in: query
        description: URI to be summarized
        required: true
        schema:
          type: string
          format: uri
      responses:
        '200': It returns a list of tuples (p,o) where p is taken from the list of summary properties and o is the value.
          
  /?view=attributes&uri={uri}:
    get:
      description: Returns all properties of `uri` whose values are literals, as well as all sio attributes `uri` has. If units are specified for any attributes, the units are also returned. The following properties are excluded: `foaf:depiction`, `sioc:content`, `skos:definition`, `dc:abstract`, `dc:description`, `dc:summary`, `rdfs:comment`, `dcelements:description`, `<http://purl.obolibrary.org/obo/IAO_0000115>`, `prov:value`, `sio:hasValue`, and `<http://dbpedia.org/ontology/abstract>`. # ... And then it pipes them through this "attributes" filter that I haven't looked at yet? It does some sort of jsonld thing. something gets sorted by length?
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  @id:
                    type: string
                    format: uri
                  attributes:
                    type: array
                  description: #something returned from get_summary
                    type: array
                  label:
                    type: string
                  type:
                    type: array

  #related
  #outgoing
  #incoming
  #describe

  ###### Class views ######
  #constraints
  #facets
  #facet_values
  #instance_data

  #outgoing
  #incoming
  
  ###### Ontology views ######
  #outgoing
  #incoming
  #describe

  ###### Nanopublication views ######
  #describe
